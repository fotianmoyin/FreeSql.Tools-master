//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://www.freesql.net
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using FreeSql.DataAnnotations;


namespace sdf
{

	[JsonObject(MemberSerialization.OptIn), Table(Name = "tb_alltypeOther")]
	public partial class Tb_alltypeother
	{

		[JsonProperty, Column(IsPrimary = true, IsIdentity = true)]
		public int Id { get; set; }

		[JsonProperty, Column(Name = "testFieldBool1111")]
		public bool Testfieldbool1111 { get; set; } = true;

		[JsonProperty, Column(Name = "testFieldBoolNullable")]
		public bool? Testfieldboolnullable { get; set; }

		[JsonProperty, Column(Name = "testFieldByte")]
		public byte Testfieldbyte { get; set; } = 6;

		[JsonProperty, Column(Name = "testFieldByteNullable")]
		public byte? Testfieldbytenullable { get; set; }

		[JsonProperty, Column(Name = "testFieldBytes")]
		public byte[] Testfieldbytes { get; set; }

		[JsonProperty, Column(Name = "testFieldDateTime")]
		public DateTime Testfielddatetime { get; set; } = DateTime.Parse("2010-10-10");

		[JsonProperty, Column(Name = "testFieldDateTimeNullable")]
		public DateTime? Testfielddatetimenullable { get; set; }

		[JsonProperty, Column(Name = "testFieldDateTimeNullableOffset")]
		public DateTime? Testfielddatetimenullableoffset { get; set; }

		[JsonProperty, Column(Name = "testFieldDateTimeOffset")]
		public DateTime Testfielddatetimeoffset { get; set; }

		[JsonProperty, Column(Name = "testFieldDecimal")]
		public decimal Testfielddecimal { get; set; } = 12.33M;

		[JsonProperty, Column(Name = "testFieldDecimalNullable")]
		public decimal? Testfielddecimalnullable { get; set; }

		[JsonProperty, Column(Name = "testFieldDouble")]
		public double Testfielddouble { get; set; } = 10d;

		[JsonProperty, Column(Name = "testFieldDoubleNullable")]
		public double? Testfielddoublenullable { get; set; }

		[JsonProperty, Column(Name = "testFieldEnum1")]
		public int Testfieldenum1 { get; set; }

		[JsonProperty, Column(Name = "testFieldEnum1Nullable")]
		public int? Testfieldenum1nullable { get; set; }

		[JsonProperty, Column(Name = "testFieldEnum2")]
		public long Testfieldenum2 { get; set; }

		[JsonProperty, Column(Name = "testFieldEnum2Nullable")]
		public long? Testfieldenum2nullable { get; set; }

		[JsonProperty, Column(Name = "testFieldFloat")]
		public float Testfieldfloat { get; set; } = 11.11f;

		[JsonProperty, Column(Name = "testFieldFloatNullable")]
		public float? Testfieldfloatnullable { get; set; }

		[JsonProperty, Column(Name = "testFieldGuid", InsertValueSql = "newid()")]
		public Guid Testfieldguid { get; set; }

		[JsonProperty, Column(Name = "testFieldGuidNullable")]
		public Guid? Testfieldguidnullable { get; set; }

		[JsonProperty, Column(Name = "testFieldInt")]
		public int Testfieldint { get; set; } = 4;

		[JsonProperty, Column(Name = "testFieldIntNullable")]
		public int? Testfieldintnullable { get; set; }

		[JsonProperty, Column(Name = "testFieldLong")]
		public long Testfieldlong { get; set; } = 5;

		[JsonProperty, Column(Name = "testFieldSByte")]
		public short Testfieldsbyte { get; set; } = 2;

		[JsonProperty, Column(Name = "testFieldSByteNullable")]
		public short? Testfieldsbytenullable { get; set; }

		[JsonProperty, Column(Name = "testFieldShort")]
		public short Testfieldshort { get; set; } = 3;

		[JsonProperty, Column(Name = "testFieldShortNullable")]
		public short? Testfieldshortnullable { get; set; }

		[JsonProperty, Column(Name = "testFieldString")]
		public string Testfieldstring { get; set; } = "我是中国人";

		[JsonProperty, Column(Name = "testFieldStringVarchar", DbType = "varchar(255)")]
		public string Testfieldstringvarchar { get; set; } = "我是中国人22";

		[JsonProperty, Column(Name = "testFieldTimeSpan")]
		public TimeSpan Testfieldtimespan { get; set; } = TimeSpan.Parse("22:26:23");

		[JsonProperty, Column(Name = "testFieldTimeSpanNullable")]
		public TimeSpan? Testfieldtimespannullable { get; set; }

		[JsonProperty, Column(Name = "testFieldUInt")]
		public long Testfielduint { get; set; } = 8;

		[JsonProperty, Column(Name = "testFieldUIntNullable")]
		public long? Testfielduintnullable { get; set; }

		[JsonProperty, Column(Name = "testFieldULong", DbType = "decimal(20,0)")]
		public decimal Testfieldulong { get; set; } = 9M;

		[JsonProperty, Column(Name = "testFieldULongNullable", DbType = "decimal(20,0)")]
		public decimal? Testfieldulongnullable { get; set; }

		[JsonProperty, Column(Name = "testFieldUShort")]
		public int Testfieldushort { get; set; } = 7;

		[JsonProperty, Column(Name = "testFieldUShortNullable")]
		public int? Testfieldushortnullable { get; set; }

		[JsonProperty, Column(Name = "testFielLongNullable")]
		public long? Testfiellongnullable { get; set; }

	}

}
